RMSE(predm5RulesTree,testCS$Elo, na.rm = TRUE) #214.18
R2(predm5RulesTree,testCS$Elo, na.rm = TRUE) #50.26%
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+GENPLAYER+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+GENPLAYERYN+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
?tuneRF
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
View(trainCS)
View(trainCS)
library(RWeka)
library(caret)
m5RulesTreeROC = M5Rules(Elo~X4yrPopROC+X4YRGDPROC+X4YRGDPPERROC+FAVSPORT+CONF, data = trainCS, control = Weka_control(M=100))
m5RulesTreeROC
plot(m5tune)
predm5RulesTree = predict(m5RulesTreeCS, newdata = testCS)
RMSE(predm5RulesTree,testCS$Elo, na.rm = TRUE) #214.18
R2(predm5RulesTree,testCS$Elo, na.rm = TRUE) #50.26%
library(RWeka)
library(caret)
m5RulesTreeROC = M5Rules(X4YREloROC~X4YRPopROC+X4YRGDPROC+X4YRGDPPERROC+FAVSPORT+CONF, data = trainCS, control = Weka_control(M=100))
m5RulesTreeROC
plot(m5tune)
predm5RulesTree = predict(m5RulesTreeCS, newdata = testCS)
RMSE(predm5RulesTree,testCS$Elo, na.rm = TRUE) #214.18
R2(predm5RulesTree,testCS$Elo, na.rm = TRUE) #50.26%
library(RWeka)
library(caret)
m5RulesTreeROC = M5Rules(X4yrELOROC~X4YRPopROC+X4YRGDPROC+X4YRGDPPERROC+FAVSPORT+CONF, data = trainCS, control = Weka_control(M=100))
m5RulesTreeROC
plot(m5tune)
predm5RulesTree = predict(m5RulesTreeCS, newdata = testCS)
RMSE(predm5RulesTree,testCS$Elo, na.rm = TRUE) #214.18
R2(predm5RulesTree,testCS$Elo, na.rm = TRUE) #50.26%
library(RWeka)
library(caret)
m5RulesTreeROC = M5Rules(X4yrELOROC~X4yrPopROC+X4yrGDPROC+X4yrGDPPERROC+FAVSPORT+CONF, data = trainCS, control = Weka_control(M=100))
m5RulesTreeROC
plot(m5tune)
predm5RulesTree = predict(m5RulesTreeCS, newdata = testCS)
RMSE(predm5RulesTree,testCS$Elo, na.rm = TRUE) #214.18
R2(predm5RulesTree,testCS$Elo, na.rm = TRUE) #50.26%
library(RWeka)
library(caret)
m5RulesTreeROC = M5Rules(X4yrELOROC~X4yrPopROC+X4yrGDPROC+X4yrGDPPerROC+FAVSPORT+CONF, data = trainCS, control = Weka_control(M=100))
m5RulesTreeROC
plot(m5tune)
predm5RulesTree = predict(m5RulesTreeCS, newdata = testCS)
RMSE(predm5RulesTree,testCS$Elo, na.rm = TRUE) #214.18
R2(predm5RulesTree,testCS$Elo, na.rm = TRUE) #50.26%
library(RWeka)
library(caret)
m5RulesTreeROC = M5Rules(X4yrELOROC~X4yrPopROC+X4yrGDPROC+X4yrGDPPerROC+FAVSPORT+CONF, data = trainCS, control = Weka_control(M=100))
m5RulesTreeROC
plot(m5tune)
predm5RulesTree = predict(m5RulesTreeCS, newdata = testCS)
RMSE(predm5RulesTree,testCS$Elo, na.rm = TRUE) #214.18
R2(predm5RulesTree,testCS$Elo, na.rm = TRUE) #50.26%
library(RWeka)
library(caret)
m5RulesTreeROC = M5Rules(X4yrELOROC~X4yrPopROC+X4yrGDPROC+X4yrGDPPerROC+FAVSPORT+CONF, data = trainCS, control = Weka_control(M=100))
m5RulesTreeROC
predm5RulesTreeROC = predict(m5RulesTreeROC, newdata = testCS)
RMSE(predm5RulesTreeROC,testCS$X4yrELOROC, na.rm = TRUE) #214.18
R2(predm5RulesTreeROC,testCS$X4yrELOROC, na.rm = TRUE) #50.26%
library(randomForest)
library(caret)
rfmodelcsROC = randomForest(X4yrELOROC~X4yrPopROC+X4yrGDPROC+X4yrGDPPerROC+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcsROC
predrfmodelcsROC = predict(rfmodelcsROC, newdata = testCS)
summary(predrfmodelcsROC)
RMSE(predrfmodelcsROC, testCS$X4yrELOROC, na.rm = TRUE) #133.74
R2(predrfmodelcsROC, testCS$X4yrELOROC, na.rm = TRUE) #74.29
gdpglm = glm(gdp~.,data = soccer2)
gdpglm
gdpglm = glm(GDP~.,data = soccer2)
gdpglm
gdpglm = lm(GDP~.,data = soccer2)
gdpglm
View(soccer2)
View(soccer2)
gdpglm = glm(GDP~., data = eloqual)
summary(gdpglm)
gdpglm = glm(GDP~., data = trainCS)
summary(gdpglm)
gdpglm = glm(GDP~.-COUNTRY, data = trainCS)
summary(gdpglm)
gdpglm = glm(GDP~.-COUNTRY-CONF, data = trainCS)
summary(gdpglm)
gdpglm = randomForest(GDPP~., data = trainCS, na.action = na.exclude)
summary(gdpglm)
write.csv(soccerCS, soccerCS.csv)
write.csv(soccerCS, "soccerCS.csv")
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
library(randomForest)
library(caret)
rfmodelcsROC = randomForest(X4yrELOROC~X4yrPopROC+X4yrGDPROC+X4yrGDPPerROC+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcsROC
predrfmodelcsROC = predict(rfmodelcsROC, newdata = testCS)
summary(predrfmodelcsROC)
RMSE(predrfmodelcsROC, testCS$X4yrELOROC, na.rm = TRUE)
R2(predrfmodelcsROC, testCS$X4yrELOROC, na.rm = TRUE)
library(randomForest)
library(caret)
rfmodelcsROC = randomForest(GDP~., data = trainCS, na.action = na.exclude)
rfmodelcsROC
predrfmodelcsROC = predict(rfmodelcsROC, newdata = testCS)
summary(predrfmodelcsROC)
RMSE(predrfmodelcsROC, testCS$X4yrELOROC, na.rm = TRUE)
R2(predrfmodelcsROC, testCS$X4yrELOROC, na.rm = TRUE)
soccerProj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccerCS.csv',header = TRUE, na.strings = ".")
str(soccerProj)
soccerProj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccerCS.csv',header = TRUE, na.strings = ".")
str(soccerProj)
soccerProj$WCYEAR = as.factor(soccerProj$WCYEAR)
soccerProj$WCQUALIFY = as.factor(soccerProj$WCQUALIFY)
soccerProj$WCPREVYEAR = as.factor(soccerProj$WCPREVYEAR)
soccerProj$WCPREVYEARQUAL = as.factor(soccerProj$WCPREVYEARQUAL)
soccerProj$FAVSPORT = as.factor(soccerProj$FAVSPORT)
soccerProj$GENPLAYERYN = as.factor(soccerProj$GENPLAYERYN)
soccerProj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccerCS.csv',header = TRUE, na.strings = ".")
str(soccerProj)
soccerProj$WCYEAR = as.factor(soccerProj$WCYEAR)
soccerProj$WCQUALIFY = as.factor(soccerProj$WCQUALIFY)
soccerProj$WCPREVYEAR = as.factor(soccerProj$WCPREVYEAR)
soccerProj$WCPREVYEARQUAL = as.factor(soccerProj$WCPREVYEARQUAL)
soccerProj$FAVSPORT = as.factor(soccerProj$FAVSPORT)
soccerProj$GENPLAYERYN = as.factor(soccerProj$GENPLAYERYN)
soccerProj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccerCS.csv',header = TRUE, na.strings = ".")
str(soccerProj)
soccerProj$WCYEAR = as.factor(soccerProj$WCYEAR)
soccerProj$WCQUALIFY = as.factor(soccerProj$WCQUALIFY)
soccerProj$WCPREVYEAR = as.factor(soccerProj$WCPREVYEAR)
soccerProj$WCPREVYEARQUAL = as.factor(soccerProj$WCPREVYEARQUAL)
soccerProj$FAVSPORT = as.factor(soccerProj$FAVSPORT)
soccerProj$GENPLAYERYN = as.factor(soccerProj$GENPLAYERYN)
soccerProj$GDP = as.numeric(soccerProj$GDP)
soccerProj$Population = as.numeric(soccerProj$Population)
soccerProj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccerCS.csv',header = TRUE, na.strings = ".")
str(soccerProj)
soccerProj$WCYEAR = as.factor(soccerProj$WCYEAR)
soccerProj$WCQUALIFY = as.factor(soccerProj$WCQUALIFY)
soccerProj$WCPREVYEAR = as.factor(soccerProj$WCPREVYEAR)
soccerProj$WCPREVYEARQUAL = as.factor(soccerProj$WCPREVYEARQUAL)
soccerProj$FAVSPORT = as.factor(soccerProj$FAVSPORT)
soccerProj$GENPLAYERYN = as.factor(soccerProj$GENPLAYERYN)
soccerProj$GDP = as.numeric(soccerProj$GDP)
soccerProj$Population = as.numeric(soccerProj$Population)
soccerProj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccerCS.csv',header = TRUE, na.strings = ".")
soccerProj$WCYEAR = as.factor(soccerProj$WCYEAR)
soccerProj$WCQUALIFY = as.factor(soccerProj$WCQUALIFY)
soccerProj$WCPREVYEAR = as.factor(soccerProj$WCPREVYEAR)
soccerProj$WCPREVYEARQUAL = as.factor(soccerProj$WCPREVYEARQUAL)
soccerProj$FAVSPORT = as.factor(soccerProj$FAVSPORT)
soccerProj$GENPLAYERYN = as.factor(soccerProj$GENPLAYERYN)
soccerProj$GDP = as.numeric(soccerProj$GDP)
soccerProj$Population = as.numeric(soccerProj$Population)
str(soccerProj)
dt = sample(nrow(soccerProj), nrow(soccerProj)*.7,replace = FALSE)
trainProj = soccerProj[dt,]
testProj = soccerProj[-dt,]
View(trainProj)
View(trainProj)
library(caret)
mod1Proj = glm(GDP~X4yrAgoGDP+X4yrAgoGDPROC+X4yrAgoGDPROC1+X4yrAgoGDPPER+X4yrAgoGDPPERROC+X4yrAgoGDPPERROC1, data = trainProj)
summary(mod1Proj)
modpred1 = predict(mod1Proj,newdata = testProj)
RMSE(modpred1Proj,testProj$GDP, na.rm = TRUE) #210.76
R2(modpred1Proj,testProj$GDP, na.rm = TRUE) # 29.24%
library(caret)
mod1Proj = glm(GDP~X4yrAgoGDP+X4yrAgoGDPROC+X4yrAgoGDPROC1+X4yrAgoGDPPER+X4yrAgoGDPROC.1+X4yrAgoGDPPERROC1, data = trainProj)
summary(mod1Proj)
modpred1 = predict(mod1Proj,newdata = testProj)
RMSE(modpred1Proj,testProj$GDP, na.rm = TRUE) #210.76
R2(modpred1Proj,testProj$GDP, na.rm = TRUE) # 29.24%
library(caret)
mod1Proj = glm(GDP~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
modpred1 = predict(mod1Proj,newdata = testProj)
RMSE(modpred1Proj,testProj$GDP, na.rm = TRUE) #210.76
R2(modpred1Proj,testProj$GDP, na.rm = TRUE) # 29.24%
library(caret)
mod1Proj = glm(GDP~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
modpred1Proj = predict(mod1Proj,newdata = testProj)
RMSE(modpred1Proj,testProj$GDP, na.rm = TRUE) #210.76
R2(modpred1Proj,testProj$GDP, na.rm = TRUE) # 29.24%
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
modpred1Proj = predict(mod1Proj,newdata = testProj)
RMSE(modpred1Proj,testProj$GDPPER, na.rm = TRUE) #210.76
R2(modpred1Proj,testProj$GDPPER, na.rm = TRUE) # 29.24%
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
soccerProj$modpred1Proj = predict(mod1Proj,newdata = testProj)
RMSE(modpred1Proj,testProj$GDPPER, na.rm = TRUE) #210.76
R2(modpred1Proj,testProj$GDPPER, na.rm = TRUE) # 29.24%
View(soccerProj)
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
test$modpred1Proj = predict(mod1Proj,newdata = testProj)
RMSE(modpred1Proj,testProj$GDPPER, na.rm = TRUE) #210.76
R2(modpred1Proj,testProj$GDPPER, na.rm = TRUE) # 29.24%
View(testProj)
View(testProj)
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
testProj$modpred1Proj = predict(mod1Proj,newdata = testProj)
RMSE(modpred1Proj,testProj$GDPPER, na.rm = TRUE) #210.76
R2(modpred1Proj,testProj$GDPPER, na.rm = TRUE) # 29.24%
View(testProj)
View(testProj)
write.csv(testProj,"GDPPERprojections.csv")
soccer2017Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccer2017Projections.csv',header = TRUE, na.strings = ".")
str(soccer2017Proj)
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
soccer2017Proj$modpred1Proj = predict(mod1Proj,newdata = soccer2017Proj)
RMSE(modpred1Proj,soccer2017Proj$GDPPER, na.rm = TRUE) #210.76
R2(modpred1Proj,soccer2017Proj$GDPPER, na.rm = TRUE) # 29.24%
View(soccer2017Proj)
View(soccer2017Proj)
dt = sample(nrow(soccerProj), nrow(soccerProj)*.8,replace = FALSE)
trainProj = soccerProj[dt,]
testProj = soccerProj[-dt,]
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
soccer2017Proj$modpred1Proj = predict(mod1Proj,newdata = soccer2017Proj)
RMSE(modpred1Proj,soccer2017Proj$GDPPER, na.rm = TRUE) #210.76
R2(modpred1Proj,soccer2017Proj$GDPPER, na.rm = TRUE) # 29.24%
write.csv(soccer2017Proj,"soccer2017Proj.csv")
soccer2017Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccer2017Proj.csv',header = TRUE, na.strings = ".")
str(soccer2017Proj)
soccer2017Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccer2017Proj.csv',header = TRUE, na.strings = ".")
str(soccer2017Proj)
soccer2017Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccer2017Proj.csv',header = TRUE, na.strings = ".")
str(soccer2017Proj)
soccer2017Proj$X4yrAgoGDP = as.integer(soccer2017Proj$X4yrAgoGDP)
soccer2017Proj$Population = as.integer(soccer2017Proj$Population)
soccer2017Proj$X4yrAgoGDPPER = as.integer(soccer2017Proj$X4yrAgoGDPPER)
soccer2017Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccer2017Proj.csv',header = TRUE, na.strings = ".")
soccer2017Proj$X4yrAgoGDP = as.integer(soccer2017Proj$X4yrAgoGDP)
soccer2017Proj$Population = as.integer(soccer2017Proj$Population)
soccer2017Proj$X4yrAgoGDPPER = as.integer(soccer2017Proj$X4yrAgoGDPPER)
str(soccer2017Proj)
dt = sample(nrow(soccer2017Proj), nrow(soccer2017Proj)*.8,replace = FALSE)
trainProj = soccer2017Proj[dt,]
testProj = soccer2017Proj[-dt,]
dt = sample(nrow(soccerProj), nrow(soccerProj)*.8,replace = FALSE)
trainProj = soccerProj[dt,]
testProj = soccerProj[-dt,]
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
soccer2017Proj$X4GDPPER4yrProj = predict(mod1Proj,newdata = soccer2017Proj)
RMSE(modpred1Proj,soccer2017Proj$GDPPER, na.rm = TRUE)
R2(modpred1Proj,soccer2017Proj$GDPPER, na.rm = TRUE)
View(soccer2017Proj)
View(soccer2017Proj)
soccer2017Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccer2017Proj.csv',header = TRUE, na.strings = ".")
soccer2017Proj$X4yrAgoGDP = as.integer(soccer2017Proj$X4yrAgoGDP)
soccer2017Proj$Population = as.integer(soccer2017Proj$Population)
soccer2017Proj$X4yrAgoGDPPER = as.integer(soccer2017Proj$X4yrAgoGDPPER)
str(soccer2017Proj)
soccer2017Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccer2017Proj.csv',header = TRUE, na.strings = ".")
soccer2017Proj$X4yrAgoGDP = as.numeric(soccer2017Proj$X4yrAgoGDP)
soccer2017Proj$Population = as.numeric(soccer2017Proj$Population)
soccer2017Proj$X4yrAgoGDPPER = as.numeric(soccer2017Proj$X4yrAgoGDPPER)
str(soccer2017Proj)
View(soccer2017Proj)
View(soccer2017Proj)
soccer2017Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccer2017Proj.csv',header = TRUE, na.strings = ".")
str(soccer2017Proj)
View(soccer2017Proj)
View(soccer2017Proj)
soccer2017Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/soccer2017Proj.csv',header = TRUE, na.strings = ".")
str(soccer2017Proj)
dt = sample(nrow(soccerProj), nrow(soccerProj)*.8,replace = FALSE)
trainProj = soccerProj[dt,]
testProj = soccerProj[-dt,]
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
soccer2017Proj$X4GDPPER4yrProj = predict(mod1Proj,newdata = soccer2017Proj)
RMSE(modpred1Proj,soccer2017Proj$GDPPER, na.rm = TRUE)
R2(modpred1Proj,soccer2017Proj$GDPPER, na.rm = TRUE)
write.csv(soccer2017Proj,"Proj.csv")
X23Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/2021Projections.csv',header = TRUE, na.strings = ".")
X23Proj$FAVSPORT = as.factor(X23Proj$FAVSPORT)
X23Proj$GDP = as.numeric(X23Proj$GDP)
X23Proj$GDPPER = as.numeric(X23Proj$GDPPER)
X23Proj$Population = as.numeric(X23Proj$Population)
str(X23Proj)
X23Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/2021Projections.csv',header = TRUE, na.strings = ".")
X23Proj$FAVSPORT = as.factor(X23Proj$FAVSPORT)
X23Proj$GDP = as.numeric(X23Proj$GDP)
X23Proj$GDPPER = as.numeric(X23Proj$GDPPER)
X23Proj$Population = as.numeric(X23Proj$Population)
str(X23Proj)
library(AppliedPredictiveModeling)
library(caret)
#Center and Scale Population, GDP and GDP Per Capita
PreProc = preProcess(X23Proj[,10:12], method=c("center", "scale"))
soccerPP = predict(PreProc, X23Proj[,10:12])
#change column names of Cenetered and scaled variables
soccerPP = setNames(soccerPP, c("GDPCS","POPCS","GDPPERCS"))
soccerCSProj = as.data.frame(c(x23ProjsoccerPP))
library(AppliedPredictiveModeling)
library(caret)
#Center and Scale Population, GDP and GDP Per Capita
PreProc = preProcess(X23Proj[,10:12], method=c("center", "scale"))
soccerPP = predict(PreProc, X23Proj[,10:12])
#change column names of Cenetered and scaled variables
soccerPP = setNames(soccerPP, c("GDPCS","POPCS","GDPPERCS"))
soccerCSProj = as.data.frame(c(x23Proj,soccerPP))
library(AppliedPredictiveModeling)
library(caret)
#Center and Scale Population, GDP and GDP Per Capita
PreProc = preProcess(X23Proj[,10:12], method=c("center", "scale"))
soccerPP = predict(PreProc, X23Proj[,10:12])
#change column names of Cenetered and scaled variables
soccerPP = setNames(soccerPP, c("GDPCS","POPCS","GDPPERCS"))
soccerCSProj = as.data.frame(c(X23Proj,soccerPP))
View(soccerCSProj)
View(soccerCSProj)
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs
X23Proj$X23EloProj = predict(rfmodelcs, newdata = soccerCSProj)
View(X23Proj)
View(X23Proj)
write.csv(X23Proj, "X23Proj.csv")
soccer2025Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/2025Projections.csv',header = TRUE, na.strings = ".")
str(soccer2025Proj)
soccer2025Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/2025Projections.csv',header = TRUE, na.strings = ".")
str(soccer2025Proj)
soccer2025Proj$FAVSPORT = as.factor(soccer2025Proj$FAVSPORT)
soccer2025Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/2025Projections.csv',header = TRUE, na.strings = ".")
soccer2025Proj$FAVSPORT = as.factor(soccer2025Proj$FAVSPORT)
str(soccer2025Proj)
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
soccer2025Proj$X4GDPPER4yrProj = predict(mod1Proj,newdata = soccer2025Proj)
write.csv(soccer2025Proj, "X25Proj")
write.csv(soccer2025Proj, "X25Proj.csv")
soccer2025Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/2025Projections.csv',header = TRUE, na.strings = ".")
soccer2025Proj$FAVSPORT = as.factor(soccer2025Proj$FAVSPORT)
str(soccer2025Proj)
soccer2025Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/2025Projections.csv',header = TRUE, na.strings = ".")
soccer2025Proj$FAVSPORT = as.factor(soccer2025Proj$FAVSPORT)
str(soccer2025Proj)
soccer2025Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/2025Projections.csv',header = TRUE, na.strings = ".")
soccer2025Proj$FAVSPORT = as.factor(soccer2025Proj$FAVSPORT)
str(soccer2025Proj)
library(caret)
mod1Proj = glm(GDPPER~X4yrAgoGDP+X4yrAgoGDPPER, data = trainProj)
summary(mod1Proj)
soccer2025Proj$X4GDPPER4yrProj = predict(mod1Proj,newdata = soccer2025Proj)
write.csv(soccer2025Proj,"X25Proj")
write.csv(soccer2025Proj,"X25Proj.csv")
X25Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/X25Projections.csv',header = TRUE, na.strings = ".")
X2525Proj$FAVSPORT = as.factor(X25Proj$FAVSPORT)
str(X25Proj)
X25Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/X25Projections.csv',header = TRUE, na.strings = ".")
X2525Proj$FAVSPORT = as.factor(X25Proj$FAVSPORT)
str(X25Proj)
X25Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/X25Projections.csv',header = TRUE, na.strings = ".")
X25Proj$FAVSPORT = as.factor(X25Proj$FAVSPORT)
str(X25Proj)
X25Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/X25Projections.csv',header = TRUE, na.strings = ".")
X25Proj$FAVSPORT = as.factor(X25Proj$FAVSPORT)
str(X25Proj)
X25Proj= read.csv('C:/Users/Omar/Desktop/WorldCupProject/X25Projections.csv',header = TRUE, na.strings = ".")
X25Proj$FAVSPORT = as.factor(X25Proj$FAVSPORT)
X25Proj$GDP = as.numeric(X25Proj$GDP)
X25Proj$GDPPER = as.numeric(X25Proj$GDPPER)
X25Proj$Population = as.numeric(X25Proj$Population)
str(X25Proj)
library(AppliedPredictiveModeling)
library(caret)
#Center and Scale Population, GDP and GDP Per Capita
PreProc = preProcess(X25Proj[,10:12], method=c("center", "scale"))
soccerPP = predict(PreProc, X25Proj[,10:12])
#change column names of Cenetered and scaled variables
soccerPP = setNames(soccerPP, c("GDPCS","POPCS","GDPPERCS"))
soccerCSProj25 = as.data.frame(c(X25Proj,soccerPP))
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs
X25Proj$X25EloProj = predict(rfmodelcs, newdata = soccerCSProj25)
View(X25Proj)
View(X25Proj)
write.csv(X25Proj,"Projections.csv")
library(RWeka)
library(caret)
m5RulesTreeCS = M5Rules(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, control = Weka_control(M=100))
m5RulesTreeCS
plot(m5tune)
predm5RulesTree = predict(m5RulesTreeCS, newdata = testCS)
RMSE(predm5RulesTree,testCS$Elo, na.rm = TRUE) #214.18
R2(predm5RulesTree,testCS$Elo, na.rm = TRUE) #50.26%
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
plot(rfmodelcs)
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
plot(rfmodelcs)
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
install.packages(reptree)
install.packages("reptree")
install.packages("reprtree")
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs
plot.gettree(rfmodelcs)
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs
gettree(rfmodelcs)
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
summary(rfmodelcs)
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs$forest
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
rfmodelcs$mse
predrfmodelcs = predict(rfmodelcs, newdata = testCS)
summary(predrfmodelcs)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
library(randomForest)
library(caret)
rfmodelcs = randomForest(Elo~POPCS+GDPCS+GDPPERCS+FAVSPORT+CONF, data = trainCS, na.action = na.exclude)
testCS$predrfmodelcs = predict(rfmodelcs, newdata = testCS)
RMSE(predrfmodelcs, testCS$Elo, na.rm = TRUE) #133.74
R2(predrfmodelcs, testCS$Elo, na.rm = TRUE) #74.29
write.csv(testCS, "testCS.csv")
